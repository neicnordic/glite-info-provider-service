#!/bin/bash

# This is a small wrapper around the standard "service status" command
# to translate the return code to what the service provider wants,
# and also to attempt to remove pids from the output as some people
# don't like them and they anyway don't add any information

if [ $# -lt 1 -o $# -gt 2 ]; then
    echo "Usage: $0 SERVICE [INSTANCE]"
    exit 3 # unknown
fi
service=$1
instance=$2 # used for voms VO

# Try to avoid localised strings
export LANG=C

# Collect the stdout and return code from service status
if [ -x /sbin/service ]; then
    string=`/sbin/service $service status $instance`
    # Strip out the standard representation of pids
    echo $string | sed 's/(pid .*) //'
else
    if [ "$instance" ]; then
        service_instance=$service@$instance
    else
        service_instance=$service
    fi
    systemctl status -n0 $service_instance | grep '^\s*Active:' | sed 's/.*: //'
fi
rc=$?

if [ $rc -eq 0 ]; then
    exit 0
elif [ $rc -lt 4 ]; then
# Values of 1 to 3 all indicate that the service is not running,
# so return as 1 = Critical
    exit 1
elif [ $rc -eq 4 ]; then
# 4 means Unknown, translated to 3
    exit 3
else
# Larger values returned as-is, which will translate to Other
    exit $rc
fi

