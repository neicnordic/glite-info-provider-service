
# This is the configuration file for the GlueService information provider
# for the LCG-packaged squid cache used with Frontier
# Extended version for GLUE 2

# Many of the entries are commands which will be executed
# using backquotes in perl. They should write to stdout - the return
# code is not relevant except for init and status.

# The init command allows any setup command to be executed
# A non-zero return code will abort the provider
# Environment variables can be set by writing to stdout (x=y)

init = glite-info-service-squid

# The service type should follow the official list in
# http://glueschema.forge.cnaf.infn.it/V12/ServiceType

service_type = org.lcg.Squid

# This should be a command which returns the service interface version
# in the format 3[.2[.1]].
# Hardcode to 1.0.0 for now

get_version = echo 1.0.0

# A command to return the service endpoint to stdout (uses variables set
# in the init script)

get_endpoint = echo http://$SQUID_HOST:$SQUID_PORT/

# A command to check the status of the service. The status message should be
# returned to stdout - it can be multi-line, the output will be massaged
# and truncated if necessary. 
# The return code should indicate the status:
# 0 = OK, 1 = Critical, 2 = Warning, 3 = Unknown, other = Other

get_status = glite-info-service-test SQUID && glite-info-service-status frontier-squid

# The URL of a WSDL document describing the service
# If the string does not start with "http" this will be omitted

WSDL_URL = nohttp://not.a.web.service/

# A URL to a web page defining the service semantics, e.g. a manual
# If the string does not start with "http" this will be omitted

semantics_URL = http://frontier.cern.ch/

# StartTime: A command to return the service start time.
# This should be a unix timestamp, the info provider converts it to ISO8601

get_starttime = perl -e '@st=stat($ENV{SQUID_PID_FILE});print "@st[10]\n";'

# Owner: this should return a list of owner VO names, one per line
# Null entries will be omitted
# Needs to be set at config time, no easy way to get it dynamically

get_owner = echo

# A list of AccessControlBaseRule strings to indicate who is allowed to
# have access to the service - at the simplest this is the same as the
# Owner but with the VO names prefixed by "VO:"
# No authz at the moment

get_acbr = echo

# ServiceData entries if any, as a list of key=value pairs
# This will normally call a separate script
# Set a flag to indicate that this is designed to be used with a
# Frontier server

get_data = echo SquidCapability=Frontier

# Associated services - not used here

get_services = echo

# New GLUE 2 attributes start here

# Capabilities are not very well-defined yet!
# This seems about the best match from the current list

get_capabilities = echo data.access.relational

# These three identify the specific implementation as opposed to the generic
# protocol. NB this version is single-valued.

get_implementor = echo LCG

get_implementationname = echo FrontierSquid

get_implementationversion = glite-info-service-version frontier-squid

# The Quality Level for this endpoint: 1 = development, 2 = testing,
# 3 = pre-production and 4 = production
# No mechanism yet to set this

get_qualitylevel = echo 4

# The ServingState for this Endpoint: 1 = closed, 2 = draining,
# 3 = queueing, 4 = production (NB "production" has a different meaning
# here to the QualityLevel)
# Just hardwired for now

get_servingstate = echo 4
