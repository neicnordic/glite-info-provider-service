
# This is the configuration file for the GlueService information provider
# for the CEMON service on a CREAM CE

# Now extended for GLUE 2 attributes 

# Many of the entries are commands which will be executed
# using backquotes in perl. They should write to stdout - the return
# code is not relevant except for init and status.

# The init command allows any setup command to be executed
# A non-zero return code will abort the provider
# Environment variables can be set by writing to stdout (x=y)

init = glite-info-service-cream

# The service type should follow the official list in
# http://glueschema.forge.cnaf.infn.it/V12/ServiceType

service_type = org.glite.ce.Monitor

# This should be a command which returns the service interface version
# in the format 3[.2[.1]]. Extract from the xml config file.

get_version = grep -m 1 InterfaceVersion /etc/glite-ce-monitor/cemonitor-config.xml | sed 's/^.*InterfaceVersion="\(.*\)".*$/\1/'

# A command to return the service endpoint to stdout (uses variables set
# in the init script)

get_endpoint = echo https://$CREAM_HOST:$CREAM_PORT/ce-monitor/services/CEMonitor

# A command to check the status of the service. The status message should be
# returned to stdout - it can be multi-line, the output will be massaged
# and truncated if necessary. 
# The return code should indicate the status:
# 0 = OK, 1 = Critical, 2 = Warning, 3 = Unknown, other = Other

get_status = glite-info-service-test CEMON && glite-info-service-status tomcat5

# The URL of a WSDL document describing the service

get_WSDL = echo https://$CREAM_HOST:$CREAM_PORT/ce-monitor/services/CEMonitor?wsdl 

# A URL to a web page defining the service semantics, e.g. a manual
# If the string does not start with "http" this will be omitted

semantics_URL = http://wiki.italiangrid.org/twiki/bin/view/CEMon/FunctionalDescription

# StartTime: A command to return the service start time.
# This should be a unix timestamp, the info provider converts it to ISO8601

get_starttime = perl -e '@st=stat($ENV{CREAM_PID_FILE});print "@st[10]\n";'

# Owner: this should return a list of owner VO names, one per line
# Null entries will be omitted
# Needs to be set at config time, no easy way to get it dynamically

get_owner = echo

# A list of AccessControlBaseRule strings to indicate who is allowed to
# have access to the service - at the simplest this is the same as the
# Owner but with the VO names prefixed by "VO:"
# Needs to be set at config time, no easy way to get it dynamically

get_acbr = echo

# New GLUE 2 attributes start here

# Capabilities are not very well-defined yet!

get_capabilities = echo information.monitoring

# These three identify the specific implementation as opposed to the generic
# protocol. NB this version is single-valued.

get_implementor = echo gLite

get_implementationname = echo CEMon

get_implementationversion =  glite-info-service-version glite-ce-monitor

# The Quality Level for this endpoint: 1 = development, 2 = testing,
# 3 = pre-production and 4 = production
# No mechanism yet to set this

get_qualitylevel = echo 4

# The ServingState for this Endpoint: 1 = closed, 2 = draining,
# 3 = queueing, 4 = production (NB "production" has a different meaning
# here to the QualityLevel)
# Hardwire to production for now

get_servingstate = echo 4

