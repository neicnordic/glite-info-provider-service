
# This is the configuration file for the GlueService information provider
# for the voms-admin service (if running) on a VOMS server

# Now extended and restructured for GLUE 2

# Many of the entries are commands which will be executed
# using backquotes in perl. They should write to stdout - the return
# code is not relevant except for init and status.

# The init command allows any setup command to be executed
# A non-zero return code will abort the provider
# Environment variables can be set by writing to stdout (x=y)

init = glite-info-service-voms-admin

# The service type should follow the official list in
# http://glueschema.forge.cnaf.infn.it/V12/ServiceType

service_type = org.glite.voms-admin

# This should be a command which returns the service interface version
# in the format 3[.2[.1]]. Set to 1.0.0 in the absence of better information.

get_version = echo 1

# A command to return the service endpoint to stdout (uses variables set
# in the init script and glite-info-glue2-voms)

get_endpoint = echo https://$VOMS_ADMIN_HOST:$VOMS_ADMIN_PORT/voms/$GLITE_INFO_SERVICE_VO

# A command to check the status of the service. The status message should be
# returned to stdout - it can be multi-line, the output will be massaged
# and truncated if necessary. 
# The return code should indicate the status:
# 0 = OK, 1 = Critical, 2 = Warning, 3 = Unknown, other = Other

get_status = glite-info-service-test VOMS_ADMIN && glite-info-service-status tomcat5

# The URL of a WSDL document describing the service
# If the string does not start with "http" this will be omitted
# This seems a bit silly, but it's the best I can find

#WSDL_URL = http://svn.research-infrastructures.eu/public/d4science/gcube/trunk/vo-management/VOMS-ADMIN/schema/glite-security-voms-admin-2.0.2.wsdl

# It seems that voms-admin now has several WSDLs

get_WSDL = echo -e "https://$VOMS_ADMIN_HOST:$VOMS_ADMIN_PORT/voms/cms/services/VOMSAttributes?wsdl\nhttps://$VOMS_ADMIN_HOST:$VOMS_ADMIN_PORT/voms/cms/services/VOMSAdmin?wsdl\nhttps://$VOMS_ADMIN_HOST:$VOMS_ADMIN_PORT/voms/cms/services/VOMSSaml?wsdl\nhttps://$VOMS_ADMIN_HOST:$VOMS_ADMIN_PORT/voms/cms/services/VOMSACL?wsdl\nhttps://$VOMS_ADMIN_HOST:$VOMS_ADMIN_PORT/voms/cms/services/VOMSCompatibility?wsdl\nhttps://$VOMS_ADMIN_HOST:$VOMS_ADMIN_PORT/voms/cms/services/VOMSRegistration?wsdl\nhttps://$VOMS_ADMIN_HOST:$VOMS_ADMIN_PORT/voms/cms/services/VOMSCertificates?wsdl"

# A URL to a web page defining the service semantics, e.g. a manual
# If the string does not start with "http" this will be omitted

semantics_URL = https://twiki.cern.ch/twiki/bin/view/EMI/EMIVomsAdminUserGuide261

# StartTime: A command to return the service start time.
# This should be a unix timestamp, the info provider converts it to ISO8601

get_starttime = perl -e '@st=stat($ENV{VOMS_ADMIN_PID_FILE});print "@st[10]\n";'

# Owner: this should return a list of owner VO names, one per line
# Null entries will be omitted

get_owner = echo $GLITE_INFO_SERVICE_VO

# A list of AccessControlBaseRule strings to indicate who is allowed to
# have access to the service - at the simplest this is the same as the
# Owner but with the VO names prefixed by "VO:"

get_acbr = echo VO:$GLITE_INFO_SERVICE_VO

# New GLUE 2 attributes start here

# Capabilities are not very well-defined yet!

get_capabilities = echo security.attributeauthority

# These three identify the specific implementation as opposed to the generic
# protocol. NB this version is single-valued.

get_implementor = echo gLite

get_implementationname = echo VOMS

get_implementationversion = glite-info-service-version voms-admin-server

# The Quality Level for this endpoint: 1 = development, 2 = testing,
# 3 = pre-production and 4 = production
# No mechanism yet to set this

get_qualitylevel = echo 4

# The ServingState for this Endpoint: 1 = closed, 2 = draining,
# 3 = queueing, 4 = production (NB "production" has a different meaning
# here to the QualityLevel)
# For a BDII there's probably no need to be able to vary this

get_servingstate = echo 4

